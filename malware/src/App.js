import React, { Component } from 'react';
import './App.css';
import {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';

// Import pages
import Home from './pages/Home';
import Upload from './pages/Upload';
import MyUploads from './pages/MyUploads';
import Favorites from './pages/Favorites';
import Login from './pages/Login';

// Import components
import NavBar from './components/NavBar';
import SearchBar from './components/SearchBar';
import Auth from './bin/Auth.js';

class App extends Component{

  constructor(props){
    super(props);

    function AuthData (){
      this.username = "";
      this.password = "";
      this.sessionID = "";
    }

    var tempObj = new AuthData();
    //console.log(tempObj);
    if (localStorage.getItem("auth") === null){
      let tempJSON = JSON.stringify(tempObj);
      localStorage.setItem("auth", tempJSON);
    } else {
      tempObj.sessionID = JSON.parse(localStorage.getItem("auth")).sessionID;
    }
    let tempJSON = JSON.stringify(tempObj);
    localStorage.setItem("auth", tempJSON);
    this.auth = new Auth();

  }
  checkAuthentication = () => {
    if (this.auth.getSessionID() === 1221313){
      return true;
    }
    else {
      return false;
    }
  }

  redirect = () =>{
    window.location.href = ('/');
  }

  clearSession = () => {
    this.auth.setSessionID("");
    window.location.href = ('/');
  }
  render() {
    const styles = {
      button: {
        position: "relative",
        minHeight: "14px",
        minWidth: "30px",
        width: "15vw",
        margin: "1vw 2vw .5vw 2vw",
        padding: "0 calc(2vw - 10px) 0 calc(2vw - 10px)",
        backgroundColor: "white",
        border: "none",
        fontSize: "calc(2vw - 2px)"
      }
    }
    const MainRoute = ({ component: Component, ...rest }) => (
      <Route {...rest} render={props => (this.checkAuthentication() ? (<Component {...props}/>) : (<Redirect to={{pathname: '/Home', state: { from: props.location }}}/>) )}/>
    )
    const PrivateRoute = ({ component: Component, ...rest }) => (
      <Route {...rest} render={props => (this.checkAuthentication() ? (<Component {...props}/>) : (<Redirect to={{pathname: '/login', state: { from: props.location }}}/>) )}/>
    )

    const LoginLogout = ({ component: Component, ...rest }) => (
      <Route {...rest} render={props => (this.checkAuthentication() ? (<button style={styles.button} onClick={this.clearSession}>Logout</button>) : (<button style={styles.button} onClick={this.redirect}>Login</button>) )}/>
    )

    const RenderNavBar = ({...rest}) => (
      <Route {...rest} render={props => (this.checkAuthentication() ? (<div><NavBar><LoginLogout/></NavBar><SearchBar/></div>) : (<div></div>) )}/>
    )

    return (
      <Router>
        <div className="App">
          <div className="NavBar">
          <RenderNavBar/>
          </div>
          <MainRoute exact path="/" component={Home}/>
          <Route exact path="/login" component={Login}/>
          <PrivateRoute exact path="/home" component={Home}/>
          <PrivateRoute exact path="/upload" component={Upload}/>
          <PrivateRoute exact path="/myuploads" component={MyUploads}/>
          <PrivateRoute exact path="/favorites" component={Favorites}/>
        </div>
      </Router>
    );
  }
}
export default App;
