import React from 'react';
import {BrowserRouter as Router, Route, Link, Redirect, withRouter} from 'react-router-dom';

export default class Auth extends React.Component{
  constructor(props){
    super(props)
    this.isAuthenticated = false;
  }

  authenticate = (cb) => {
    this.isAuthenticated = true
    setTimeout(cb, 100) // fake async
  }

  signout = (cb) => {
    this.isAuthenticated = false
    setTimeout(cb, 100)
  }

  login = () => {
    this.authenticate();
  }
  logout = () => {
    this.signout();
  }

  getButton = () => {
    console.log("FUCK");
    var button = null;
     if (this.isAuthenticated) {
       button = <button onClick={this.logout}>Logout</button>;
     } else {
       button = <button onClick={this.login}>Login</button>;
     }
     return button;
  }

  getAuthenticated = () => {
    return this.isAuthenticated;
  }

  render () {
    return (this.getButton());
  }
  /*
  const AuthButton = withRouter(({ history }) => (
    fakeAuth.isAuthenticated ? (
      <p>
        Welcome! <button onClick={() => {
          fakeAuth.signout(() => history.push('/'))
        }}>Sign out</button>
      </p>
    ) : (
      <p>You are not logged in.</p>
    )
  ))
  */
  /*
  getButton = () => {
    console.log("FUCK");
    let button = null;
     if (this.isAuthenticated) {
       button = <button onClick={this.logout}>Logout</button>;
     } else {
       button = <button onClick={this.login}>Login</button>;
     }
     return button;
  }
  */


  /*
  loggedIn () {
    return false;
  }

  requireAuth = (nextState, replace) => {

    if (!this.loggedIn()) {
      replace({
        pathname: '/login'
      })
    }
  } */
}
