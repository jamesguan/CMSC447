import React, {Component} from 'react';
import Layout from '../components/Layout';
import FileUpload from 'react-fileupload'; //https://github.com/SoAanyip/React-FileUpload
//import Authentication from '../bin/Authentication.js';

export default class Upload extends Component{

  constructor(props){
    super(props);

    this.limit = 1;
  }

  checkUploadFile = () =>{

  }

  handleUploading = () =>{

  }

  handleUploadSuccess = () =>{

  }

  handleUploadFailed = () =>{

  }

  getLimitedNumber = () =>{
    return this.limit;
  }

  render(){
    /*set properties*/
	  this.uploadOptions = {
		  baseUrl:'./upload',
      param: {
        _c: 'file',
        _a: 'uploadFile'
      },
      multiple: true,
      numberLimit: this.getLimitNumber,
      accept: '/*',
      fileFieldName(file) {
        return file.rawID
      }
    }
	  /*Use FileUpload with options*/
	  /*Set two dom with ref*/
    return(
      <div className="Upload">
      <Layout>
        <FileUpload options={this.uploadOptions} ref="fileUpload">
          <input type="text" name="filename"></input>
          <button ref="chooseBtn">choose</button>
          <button ref="uploadBtn">upload</button>
        </FileUpload>
      </Layout>
    </div>
    );
  }
}

/*
<form>
  FileName:
  <input type="text" name="filename"></input>
</form>
<button onClick={this.openFile}>GrabFile</button>
<button>Upload</button>
*/

/*
_c: 'file',
_a: 'UploadFile'
},
multiple: true,
numberLimit: this.getLimitNumber,
accept: '/*',
fileFieldName(file) {
  return file.rawID
},
chooseAndUpload: true,
wrapperDisplay: 'block',
beforeUpload: this.checkUploadFile,
uploading: this.handleUploading,
//xhr success
uploadSuccess: this.handleUploadSuccess,
//xhr fail
uploadFail: this.handleUploadFailed,
uploadError: this.handleUploadFailed
}
 */
